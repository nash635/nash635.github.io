<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HCCL Deep Dive</title>
      <link href="/2025/10/26/HCCL-Deep-Dive/"/>
      <url>/2025/10/26/HCCL-Deep-Dive/</url>
      
        <content type="html"><![CDATA[<!-- 文章来自仓库 cann-hccl/HCCL设计文档.md，经整理发布为博客文章 --><span id="more"></span><h1 id="HCCL-Huawei-Collective-Communication-Library-设计文档"><a href="#HCCL-Huawei-Collective-Communication-Library-设计文档" class="headerlink" title="HCCL (Huawei Collective Communication Library) 设计文档"></a>HCCL (Huawei Collective Communication Library) 设计文档</h1><h2 id="1-项目概述"><a href="#1-项目概述" class="headerlink" title="1. 项目概述"></a>1. 项目概述</h2><h3 id="1-1-项目简介"><a href="#1-1-项目简介" class="headerlink" title="1.1 项目简介"></a>1.1 项目简介</h3><p>HCCL（Huawei Collective Communication Library，华为集合通信库）是基于昇腾AI处理器的高性能集合通信库，为单机多卡及多机多卡环境提供高效的数据并行和模型并行集合通信方案。</p><p>开源代码库：<a href="https://gitee.com/ascend/cann-hccl">https://gitee.com/ascend/cann-hccl</a></p><p><strong>版本信息：</strong> 配套CANN软件版本发行</p><p><strong>许可证：</strong> CANN Open Software License Agreement Version 1.0</p><h3 id="1-2-核心特性"><a href="#1-2-核心特性" class="headerlink" title="1.2 核心特性"></a>1.2 核心特性</h3><ul><li>✅ <strong>高性能通信算法</strong>：支持9种拓扑算法（Mesh、Ring、RHD、PairWise、Star、NHR、NB、AHC、Pipeline）</li><li>✅ <strong>灵活的通信模式</strong>：支持单机多卡和多机多卡场景</li><li>✅ <strong>智能算法选择</strong>：根据通信域信息和数据量自动选择最优算法</li><li>✅ <strong>分层网络优化</strong>：支持Server内和Server间分级通信</li><li>✅ <strong>多种集合操作</strong>：AllReduce、AllGather、ReduceScatter、Broadcast等</li></ul><h3 id="1-3-系统架构"><a href="#1-3-系统架构" class="headerlink" title="1.3 系统架构"></a>1.3 系统架构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  subgraph &quot;适配层&quot;</span><br><span class="line">    A[图引擎适配] --&gt; B[单算子适配]</span><br><span class="line">    B --&gt; C[通信切分优化]</span><br><span class="line">  end</span><br><span class="line">    </span><br><span class="line">  subgraph &quot;集合通信业务层&quot;</span><br><span class="line">    D[通信框架模块]</span><br><span class="line">    E[通信算法模块]</span><br><span class="line">        </span><br><span class="line">    D --&gt; D1[通信域管理]</span><br><span class="line">    D --&gt; D2[算子业务串联]</span><br><span class="line">    D --&gt; D3[算法选择]</span><br><span class="line">    D --&gt; D4[资源申请]</span><br><span class="line">    D --&gt; D5[任务下发]</span><br><span class="line">        </span><br><span class="line">    E --&gt; E1[Mesh算法]</span><br><span class="line">    E --&gt; E2[Ring算法]</span><br><span class="line">    E --&gt; E3[RHD算法]</span><br><span class="line">    E --&gt; E4[PairWise算法]</span><br><span class="line">    E --&gt; E5[Star算法]</span><br><span class="line">    E --&gt; E6[NHR算法]</span><br><span class="line">    E --&gt; E7[NB算法]</span><br><span class="line">    E --&gt; E8[AHC算法]</span><br><span class="line">    E --&gt; E9[Pipeline算法]</span><br><span class="line">  end</span><br><span class="line">    </span><br><span class="line">  subgraph &quot;集合通信平台层&quot;</span><br><span class="line">    F[资源抽象]</span><br><span class="line">    G[维测能力]</span><br><span class="line">  end</span><br><span class="line">    </span><br><span class="line">  C --&gt; D</span><br><span class="line">  D &lt;--&gt; E</span><br><span class="line">  D --&gt; F</span><br><span class="line">  F --&gt; G</span><br><span class="line">    </span><br><span class="line">  style D fill:#e1d5e7</span><br><span class="line">  style E fill:#e1d5e7</span><br><span class="line">  style D1 fill:#fff2cc</span><br><span class="line">  style D2 fill:#fff2cc</span><br><span class="line">  style D3 fill:#fff2cc</span><br><span class="line">  style D4 fill:#fff2cc</span><br><span class="line">  style D5 fill:#fff2cc</span><br></pre></td></tr></table></figure><h2 id="2-核心架构设计"><a href="#2-核心架构设计" class="headerlink" title="2. 核心架构设计"></a>2. 核心架构设计</h2><h3 id="2-1-三层架构模型"><a href="#2-1-三层架构模型" class="headerlink" title="2.1 三层架构模型"></a>2.1 三层架构模型</h3><p>HCCL采用分层设计，从上到下分为三个核心层次：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">  A[适配层] --&gt; B[业务层]</span><br><span class="line">  B --&gt; C[平台层]</span><br><span class="line">    </span><br><span class="line">  subgraph &quot;本源码仓实现范围&quot;</span><br><span class="line">    B1[通信框架]</span><br><span class="line">    B2[通信算法]</span><br><span class="line">  end</span><br><span class="line">    </span><br><span class="line">  B -.包含.-&gt; B1</span><br><span class="line">  B -.包含.-&gt; B2</span><br><span class="line">    </span><br><span class="line">  style B1 fill:#e1d5e7</span><br><span class="line">  style B2 fill:#e1d5e7</span><br></pre></td></tr></table></figure><h4 id="2-1-1-适配层"><a href="#2-1-1-适配层" class="headerlink" title="2.1.1 适配层"></a>2.1.1 适配层</h4><p><strong>职责：</strong></p><ul><li>图引擎与单算子的对接适配</li><li>通信操作的切分与优化</li><li>任务分发策略制定</li></ul><h4 id="2-1-2-集合通信业务层（本仓核心）"><a href="#2-1-2-集合通信业务层（本仓核心）" class="headerlink" title="2.1.2 集合通信业务层（本仓核心）"></a>2.1.2 集合通信业务层（本仓核心）</h4><p><strong>通信框架模块：</strong></p><ul><li>通信域（Communicator）生命周期管理</li><li>集合通信算子的业务流程编排</li><li>算法选择策略与调度</li><li>与平台层协作完成资源申请</li><li>任务下发与执行管理</li></ul><p><strong>通信算法模块：</strong></p><ul><li>实现9种核心集合通信算法</li><li>资源消耗计算与评估</li><li>基于通信域信息的任务编排</li><li>算法性能模型（α-β模型）实现</li></ul><h4 id="2-1-3-集合通信平台层"><a href="#2-1-3-集合通信平台层" class="headerlink" title="2.1.3 集合通信平台层"></a>2.1.3 集合通信平台层</h4><p><strong>职责：</strong></p><ul><li>NPU硬件资源抽象与管理</li><li>HCCS链路资源管理</li><li>通信日志与性能监控</li><li>错误诊断与恢复机制</li></ul><h3 id="2-2-目录结构"><a href="#2-2-目录结构" class="headerlink" title="2.2 目录结构"></a>2.2 目录结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cann-hccl/</span><br><span class="line">├── src/domain/collective_communication/</span><br><span class="line">│   ├── algorithm/          # 通信算法实现</span><br><span class="line">│   └── framework/          # 通信框架实现</span><br><span class="line">├── inc/hccl/              # 对外头文件</span><br><span class="line">│   ├── hccl.h</span><br><span class="line">│   └── hccl_types.h</span><br><span class="line">├── docs/                   # 算法原理文档</span><br><span class="line">├── test/                   # 测试代码</span><br><span class="line">├── cmake/                  # 编译配置</span><br><span class="line">└── build.sh               # 编译脚本</span><br></pre></td></tr></table></figure><h2 id="3-集合通信算法详解"><a href="#3-集合通信算法详解" class="headerlink" title="3. 集合通信算法详解"></a>3. 集合通信算法详解</h2><p>HCCL的核心竞争力在于其丰富的集合通信算法库，针对不同的网络拓扑、节点规模和数据量提供最优解决方案。</p><h3 id="3-1-性能评估模型"><a href="#3-1-性能评估模型" class="headerlink" title="3.1 性能评估模型"></a>3.1 性能评估模型</h3><p>HCCL采用 <strong>α-β模型（Hockney模型）</strong> 进行性能评估：</p><p>$$<br>T &#x3D; \alpha + n\beta + n\gamma<br>$$</p><p><strong>参数说明：</strong></p><ul><li><strong>α</strong>：节点间的固定时延（启动开销）</li><li><strong>β</strong>：每byte数据传输耗时（带宽倒数）</li><li><strong>n</strong>：通信数据大小（bytes）</li><li><strong>γ</strong>：每byte数据规约计算耗时</li><li><strong>p</strong>：通信域节点个数</li></ul><h3 id="3-2-Mesh-算法"><a href="#3-2-Mesh-算法" class="headerlink" title="3.2 Mesh 算法"></a>3.2 Mesh 算法</h3><h4 id="3-2-1-算法原理"><a href="#3-2-1-算法原理" class="headerlink" title="3.2.1 算法原理"></a>3.2.1 算法原理</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">  N0((Rank0)) ---|全连接| N1((Rank1))</span><br><span class="line">  N0 ---|全连接| N2((Rank2))</span><br><span class="line">  N0 ---|全连接| N3((Rank3))</span><br><span class="line">  N1 ---|全连接| N2</span><br><span class="line">  N1 ---|全连接| N3</span><br><span class="line">  N2 ---|全连接| N3</span><br><span class="line">    </span><br><span class="line">  style N0 fill:#ffcccc</span><br><span class="line">  style N1 fill:#ccffcc</span><br><span class="line">  style N2 fill:#ccccff</span><br><span class="line">  style N3 fill:#ffffcc</span><br></pre></td></tr></table></figure><p><strong>特点：</strong></p><ul><li><strong>拓扑：</strong> FullMesh互联，NPU间全连接</li><li><strong>时间复杂度：</strong> O(1)</li><li><strong>适用场景：</strong> Server内通信，小规模集群</li><li><strong>优势：</strong> 一步完成通信，延迟最低</li><li><strong>劣势：</strong> 资源开销大，难以扩展到大规模</li></ul><h4 id="3-2-2-执行流程示例（以AllReduce为例）"><a href="#3-2-2-执行流程示例（以AllReduce为例）" class="headerlink" title="3.2.2 执行流程示例（以AllReduce为例）"></a>3.2.2 执行流程示例（以AllReduce为例）</h4><p><strong>说明：</strong> Mesh算法支持所有集合通信原语（AllReduce、AllGather、ReduceScatter、Broadcast、Reduce、Scatter、Gather等），此处以AllReduce为典型示例展示执行流程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">  participant R0 as Rank0</span><br><span class="line">  participant R1 as Rank1</span><br><span class="line">  participant R2 as Rank2</span><br><span class="line">  participant R3 as Rank3</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Phase 1: ReduceScatter (并发)</span><br><span class="line">  Note over R0,R3: 每个节点将数据切分为p份，并发发送给所有其他节点</span><br><span class="line">  R0-&gt;&gt;R1: 发送chunk_1</span><br><span class="line">  R0-&gt;&gt;R2: 发送chunk_2</span><br><span class="line">  R0-&gt;&gt;R3: 发送chunk_3</span><br><span class="line">  R1-&gt;&gt;R0: 发送chunk_0</span><br><span class="line">  R1-&gt;&gt;R2: 发送chunk_2</span><br><span class="line">  R1-&gt;&gt;R3: 发送chunk_3</span><br><span class="line">  R2-&gt;&gt;R0: 发送chunk_0</span><br><span class="line">  R2-&gt;&gt;R1: 发送chunk_1</span><br><span class="line">  R2-&gt;&gt;R3: 发送chunk_3</span><br><span class="line">  R3-&gt;&gt;R0: 发送chunk_0</span><br><span class="line">  R3-&gt;&gt;R1: 发送chunk_1</span><br><span class="line">  R3-&gt;&gt;R2: 发送chunk_2</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Phase 2: 本地Reduce</span><br><span class="line">  Note over R0: 规约chunk_0</span><br><span class="line">  Note over R1: 规约chunk_1</span><br><span class="line">  Note over R2: 规约chunk_2</span><br><span class="line">  Note over R3: 规约chunk_3</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Phase 3: AllGather (并发)</span><br><span class="line">  Note over R0,R3: 每个节点并发向所有其他节点发送自己的规约结果</span><br><span class="line">  R0-&gt;&gt;R1: 广播chunk_0*</span><br><span class="line">  R0-&gt;&gt;R2: 广播chunk_0*</span><br><span class="line">  R0-&gt;&gt;R3: 广播chunk_0*</span><br><span class="line">  R1-&gt;&gt;R0: 广播chunk_1*</span><br><span class="line">  R1-&gt;&gt;R2: 广播chunk_1*</span><br><span class="line">  R1-&gt;&gt;R3: 广播chunk_1*</span><br><span class="line">  R2-&gt;&gt;R0: 广播chunk_2*</span><br><span class="line">  R2-&gt;&gt;R1: 广播chunk_2*</span><br><span class="line">  R2-&gt;&gt;R3: 广播chunk_2*</span><br><span class="line">  R3-&gt;&gt;R0: 广播chunk_3*</span><br><span class="line">  R3-&gt;&gt;R1: 广播chunk_3*</span><br><span class="line">  R3-&gt;&gt;R2: 广播chunk_3*</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: 所有节点持有完整规约结果</span><br></pre></td></tr></table></figure><p><strong>执行流程详细描述：</strong></p><p><strong>Phase 1: ReduceScatter（并发执行）</strong></p><ul><li><strong>数据准备</strong>: 每个节点将自己的n字节数据切分为p个chunk，每个chunk大小为n&#x2F;p字节</li><li><strong>并发发送</strong>: <ul><li>Rank0保留chunk_0，将chunk_1发送给Rank1，chunk_2发送给Rank2，chunk_3发送给Rank3</li><li>Rank1保留chunk_1，将chunk_0发送给Rank0，chunk_2发送给Rank2，chunk_3发送给Rank3</li><li>Rank2保留chunk_2，将chunk_0发送给Rank0，chunk_1发送给Rank1，chunk_3发送给Rank3</li><li>Rank3保留chunk_3，将chunk_0发送给Rank0，chunk_1发送给Rank1，chunk_2发送给Rank2</li></ul></li><li><strong>通信特点</strong>: 全连接并发，所有通信同时进行，利用FullMesh拓扑的双向带宽</li></ul><p><strong>Phase 2: 本地Reduce（本地计算）</strong></p><ul><li>Rank0对接收到的所有chunk_0进行规约：chunk_0* &#x3D; chunk_0(R0) + chunk_0(R1) + chunk_0(R2) + chunk_0(R3)</li><li>Rank1对接收到的所有chunk_1进行规约：chunk_1* &#x3D; chunk_1(R0) + chunk_1(R1) + chunk_1(R2) + chunk_1(R3)</li><li>Rank2对接收到的所有chunk_2进行规约：chunk_2* &#x3D; chunk_2(R0) + chunk_2(R1) + chunk_2(R2) + chunk_2(R3)</li><li>Rank3对接收到的所有chunk_3进行规约：chunk_3* &#x3D; chunk_3(R0) + chunk_3(R1) + chunk_3(R2) + chunk_3(R3)</li><li>此时每个节点持有1&#x2F;p的完整规约结果</li></ul><p><strong>Phase 3: AllGather（并发执行）</strong></p><ul><li><strong>并发广播</strong>: <ul><li>Rank0将chunk_0*并发发送给Rank1, Rank2, Rank3</li><li>Rank1将chunk_1*并发发送给Rank0, Rank2, Rank3</li><li>Rank2将chunk_2*并发发送给Rank0, Rank1, Rank3</li><li>Rank3将chunk_3*并发发送给Rank0, Rank1, Rank2</li></ul></li><li><strong>最终状态</strong>: 所有节点持有完整的规约结果[chunk_0*, chunk_1*, chunk_2*, chunk_3*]</li><li><strong>通信特点</strong>: 全连接并发，充分利用FullMesh拓扑的所有链路</li></ul><p><strong>其他原语：</strong></p><ul><li><strong>AllGather</strong>: 直接执行Phase 3（并发收集所有节点数据）</li><li><strong>ReduceScatter</strong>: 执行Phase 1 + Phase 2（并发规约后分散）</li><li><strong>Broadcast</strong>: 根节点向所有节点并发发送完整数据</li><li><strong>Gather</strong>: 所有节点向根节点并发发送数据</li></ul><h4 id="3-2-3-性能模型"><a href="#3-2-3-性能模型" class="headerlink" title="3.2.3 性能模型"></a>3.2.3 性能模型</h4><table><thead><tr><th>操作</th><th>耗时公式</th><th>说明</th></tr></thead><tbody><tr><td>Scatter</td><td>$\alpha + \frac{1}{p}n\beta$</td><td>一步完成，根节点向p个节点并发发送，每节点接收n&#x2F;p数据</td></tr><tr><td>Gather</td><td>$\alpha + \frac{1}{p}n\beta$</td><td>一步完成，p个节点向根节点并发发送，根节点接收全部数据</td></tr><tr><td>Broadcast</td><td>$2\alpha + \frac{2}{p}n\beta$</td><td>Scatter + AllGather实现（两步），每步传输部分数据</td></tr><tr><td>Reduce</td><td>$2\alpha + \frac{2}{p}n\beta + \frac{p-1}{p}n\gamma$</td><td>ReduceScatter + Gather实现，需规约所有输入数据</td></tr><tr><td>ReduceScatter</td><td>$\alpha + \frac{1}{p}n\beta + \frac{p-1}{p}n\gamma$</td><td>一步完成，并发规约并分发，每节点接收n&#x2F;p结果</td></tr><tr><td>AllGather</td><td>$\alpha + \frac{1}{p}n\beta$</td><td>一步完成，全连接并发传输，每节点发送n&#x2F;p数据</td></tr><tr><td>AllReduce</td><td>$2\alpha + \frac{2}{p}n\beta + \frac{p-1}{p}n\gamma$</td><td>ReduceScatter + AllGather两阶段，总共两步通信</td></tr></tbody></table><h3 id="3-3-Ring-算法"><a href="#3-3-Ring-算法" class="headerlink" title="3.3 Ring 算法"></a>3.3 Ring 算法</h3><h4 id="3-3-1-算法原理"><a href="#3-3-1-算法原理" class="headerlink" title="3.3.1 算法原理"></a>3.3.1 算法原理</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">  R0((Rank0)) --&gt;|右手卡| R1((Rank1))</span><br><span class="line">  R1 --&gt;|右手卡| R2((Rank2))</span><br><span class="line">  R2 --&gt;|右手卡| R3((Rank3))</span><br><span class="line">  R3 --&gt;|右手卡| R0</span><br><span class="line">    </span><br><span class="line">  R0 -.-&gt;|左手卡| R3</span><br><span class="line">  R1 -.-&gt;|左手卡| R0</span><br><span class="line">  R2 -.-&gt;|左手卡| R1</span><br><span class="line">  R3 -.-&gt;|左手卡| R2</span><br><span class="line">    </span><br><span class="line">  style R0 fill:#ffcccc</span><br><span class="line">  style R1 fill:#ccffcc</span><br><span class="line">  style R2 fill:#ccccff</span><br><span class="line">  style R3 fill:#ffffcc</span><br></pre></td></tr></table></figure><p><strong>特点：</strong></p><ul><li><strong>拓扑：</strong> 环形结构，每个节点只与左右邻居通信</li><li><strong>时间复杂度：</strong> O(p-1) - 线性复杂度</li><li><strong>适用场景：</strong> <ul><li>Server内和Server间通信</li><li>小规模集群或小数据量</li><li>网络拥塞场景</li><li>Pipeline不适用的场景</li></ul></li></ul><h4 id="3-3-2-执行流程示例（以AllReduce为例）"><a href="#3-3-2-执行流程示例（以AllReduce为例）" class="headerlink" title="3.3.2 执行流程示例（以AllReduce为例）"></a>3.3.2 执行流程示例（以AllReduce为例）</h4><p><strong>说明：</strong> Ring算法支持多种集合通信原语（AllReduce、AllGather、ReduceScatter、Broadcast、Reduce、Scatter、Gather等），此处以AllReduce为典型示例展示执行流程。</p><h5 id="两阶段概览"><a href="#两阶段概览" class="headerlink" title="两阶段概览"></a>两阶段概览</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">graph TB</span><br><span class="line">  subgraph &quot;阶段1: ReduceScatter (p-1步)&quot;</span><br><span class="line">    A1[数据切分为p块] --&gt; A2[沿环传输并规约]</span><br><span class="line">    A2 --&gt; A3[每个节点持有1/p规约结果]</span><br><span class="line">  end</span><br><span class="line">    </span><br><span class="line">  subgraph &quot;阶段2: AllGather (p-1步)&quot;</span><br><span class="line">    B1[每个节点持有1/p数据] --&gt; B2[沿环传输完整数据]</span><br><span class="line">    B2 --&gt; B3[所有节点获得完整结果]</span><br><span class="line">  end</span><br><span class="line">    </span><br><span class="line">  A3 --&gt; B1</span><br></pre></td></tr></table></figure><h5 id="详细执行步骤（4节点示例）"><a href="#详细执行步骤（4节点示例）" class="headerlink" title="详细执行步骤（4节点示例）"></a>详细执行步骤（4节点示例）</h5><p><strong>阶段1: ReduceScatter（p-1&#x3D;3步完成）</strong></p><p>Ring算法的ReduceScatter阶段：每个节点在每一步都向右邻居发送一个数据块，并接收左邻居的数据块进行规约。经过p-1步后，每个节点持有一个完整规约的数据块。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">  participant R0 as Rank0&lt;br/&gt;[A0,B0,C0,D0]</span><br><span class="line">  participant R1 as Rank1&lt;br/&gt;[A1,B1,C1,D1]</span><br><span class="line">  participant R2 as Rank2&lt;br/&gt;[A2,B2,C2,D2]</span><br><span class="line">  participant R3 as Rank3&lt;br/&gt;[A3,B3,C3,D3]</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Step 1: 每个节点向右发送一个块</span><br><span class="line">  R0-&gt;&gt;R1: D0</span><br><span class="line">  R1-&gt;&gt;R2: D1  </span><br><span class="line">  R2-&gt;&gt;R3: D2</span><br><span class="line">  R3-&gt;&gt;R0: D3</span><br><span class="line">  Note over R0: 接收D3，持有[A0,B0,C0,D0+D3]</span><br><span class="line">  Note over R1: 接收D0，持有[A1,B1,C1,D0+D1]</span><br><span class="line">  Note over R2: 接收D1，持有[A2,B2,C2+D1,D2]</span><br><span class="line">  Note over R3: 接收D2，持有[A3+D2,B3,C3,D3]</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Step 2: 继续向右发送刚规约的块</span><br><span class="line">  R0-&gt;&gt;R1: C0</span><br><span class="line">  R1-&gt;&gt;R2: D0+D1</span><br><span class="line">  R2-&gt;&gt;R3: C2+D1  </span><br><span class="line">  R3-&gt;&gt;R0: D2+D3</span><br><span class="line">  Note over R0: 接收D2+D3，持有[A0,B0,C0,D*]</span><br><span class="line">  Note over R1: 接收C0，持有[A1,B1,C0+C1,D*]</span><br><span class="line">  Note over R2: 接收D0+D1，持有[A2,B2,C*,D*]</span><br><span class="line">  Note over R3: 接收C2+D1，持有[A*,B3,C*,D3]</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Step 3: 最后一轮</span><br><span class="line">  R0-&gt;&gt;R1: B0</span><br><span class="line">  R1-&gt;&gt;R2: C0+C1</span><br><span class="line">  R2-&gt;&gt;R3: B2</span><br><span class="line">  R3-&gt;&gt;R0: C*</span><br><span class="line">  Note over R0: 接收C*，持有[A0,B0,C*,D*]</span><br><span class="line">  Note over R1: 接收B0，持有[A1,B0+B1,C*,D*]</span><br><span class="line">  Note over R2: 接收C0+C1，持有[A2,B*,C*,D2]</span><br><span class="line">  Note over R3: 接收B2，持有[A3,B2+B3,C3,D*]</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 上述简化示例未完整展示。实际上ReduceScatter需要p-1&#x3D;3步，每步每个节点都在某个特定位置进行规约。最终：</p><ul><li>Rank0持有A块的完整规约结果A*</li><li>Rank1持有B块的完整规约结果B*  </li><li>Rank2持有C块的完整规约结果C*</li><li>Rank3持有D块的完整规约结果D*</li></ul><p><strong>阶段2: AllGather（3步完成）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">  participant R0 as Rank0</span><br><span class="line">  participant R1 as Rank1</span><br><span class="line">  participant R2 as Rank2</span><br><span class="line">  participant R3 as Rank3</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: 每个节点持有1/4规约结果</span><br><span class="line">  Note over R0: [A*,B*,-,-]</span><br><span class="line">  Note over R1: [-,B*,C*,-]</span><br><span class="line">  Note over R2: [-,-,C*,D*]</span><br><span class="line">  Note over R3: [A*,-,-,D*]</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Step 1: 沿环传输收集</span><br><span class="line">  R0-&gt;&gt;R1: A*</span><br><span class="line">  R1-&gt;&gt;R2: B*</span><br><span class="line">  R2-&gt;&gt;R3: C*</span><br><span class="line">  R3-&gt;&gt;R0: D*</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Step 2: 继续传输</span><br><span class="line">  R0-&gt;&gt;R1: D*</span><br><span class="line">  R1-&gt;&gt;R2: A*</span><br><span class="line">  R2-&gt;&gt;R3: B*</span><br><span class="line">  R3-&gt;&gt;R0: C*</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: Step 3: 最后一轮</span><br><span class="line">  R0-&gt;&gt;R1: C*</span><br><span class="line">  R1-&gt;&gt;R2: D*</span><br><span class="line">  R2-&gt;&gt;R3: A*</span><br><span class="line">  R3-&gt;&gt;R0: B*</span><br><span class="line">    </span><br><span class="line">  Note over R0,R3: 所有节点持有完整结果[A*,B*,C*,D*]</span><br></pre></td></tr></table></figure><p><strong>执行流程详细描述：</strong></p><p><strong>阶段1: ReduceScatter（p-1&#x3D;3步完成）</strong></p><p>Ring算法的核心思想：数据切分为p块，每个节点在每一步向右邻居发送一个块，从左邻居接收一个块并规约。经过p-1步后，每个节点持有一个完整规约的数据块。</p><ul><li><p><strong>初始状态</strong>: </p><ul><li>Rank0持有[A0, B0, C0, D0]</li><li>Rank1持有[A1, B1, C1, D1]</li><li>Rank2持有[A2, B2, C2, D2]</li><li>Rank3持有[A3, B3, C3, D3]</li></ul></li><li><p><strong>Step 1</strong>: </p><ul><li>发送：R0→D0→R1, R1→D1→R2, R2→D2→R3, R3→D3→R0</li><li>规约：每个节点将接收的D块与本地D块规约</li><li>结果：R0持有D0+D3, R1持有D0+D1, R2持有D1+D2, R3持有D2+D3</li><li>数据流向：环形顺时针流动</li></ul></li><li><p><strong>Step 2</strong>: </p><ul><li>发送：R0→C0→R1, R1→(D0+D1)→R2, R2→(C2+D1)→R3, R3→(D2+D3)→R0</li><li>规约：每个节点将接收的块与本地对应块规约</li><li>关键：R2完成D块的完整规约D* &#x3D; D0+D1+D2+D3</li><li>数据流向：继续顺时针，规约块逐步完成</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 分布式通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCCL </tag>
            
            <tag> 集合通信 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建记录：从零到一的 Hexo + Stellar 实践</title>
      <link href="/2025/07/24/hexo-stellar-blog-setup/"/>
      <url>/2025/07/24/hexo-stellar-blog-setup/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建记录：从零到一的-Hexo-Stellar-实践"><a href="#博客搭建记录：从零到一的-Hexo-Stellar-实践" class="headerlink" title="博客搭建记录：从零到一的 Hexo + Stellar 实践"></a>博客搭建记录：从零到一的 Hexo + Stellar 实践</h1><p>作为一名技术人员，拥有一个个人博客来记录学习心得和分享技术经验是很有必要的。经过调研和实践，我最终选择了 Hexo + Stellar 主题的技术栈来搭建这个博客。</p><h2 id="🎯-技术选型"><a href="#🎯-技术选型" class="headerlink" title="🎯 技术选型"></a>🎯 技术选型</h2><h3 id="为什么选择-Hexo？"><a href="#为什么选择-Hexo？" class="headerlink" title="为什么选择 Hexo？"></a>为什么选择 Hexo？</h3><p>在众多静态博客生成器中，我选择 Hexo 的原因：</p><ol><li><strong>生态丰富</strong>: 插件众多，扩展性强</li><li><strong>中文友好</strong>: 中文文档完善，社区活跃</li><li><strong>性能优秀</strong>: 生成速度快，支持增量生成</li><li><strong>主题丰富</strong>: 有众多优秀的主题可选择</li></ol><h3 id="为什么选择-Stellar-主题？"><a href="#为什么选择-Stellar-主题？" class="headerlink" title="为什么选择 Stellar 主题？"></a>为什么选择 Stellar 主题？</h3><p>Stellar 是我见过的最优雅的 Hexo 主题之一：</p><ul><li><strong>设计美观</strong>: 现代化的设计风格，视觉效果出色</li><li><strong>功能丰富</strong>: 内置搜索、评论、统计等功能</li><li><strong>移动友好</strong>: 完美的响应式设计</li><li><strong>配置灵活</strong>: 高度可定制化</li><li><strong>持续维护</strong>: 作者 <a href="https://github.com/xaoxuu">@xaoxuu</a> 持续更新</li></ul><h2 id="🛠️-搭建过程"><a href="#🛠️-搭建过程" class="headerlink" title="🛠️ 搭建过程"></a>🛠️ 搭建过程</h2><h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h3><p>首先确保系统已安装 Node.js 和 Git：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 Node.js 版本</span></span><br><span class="line">node --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 npm 版本  </span></span><br><span class="line">npm --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 Git 版本</span></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><h3 id="2-安装-Hexo"><a href="#2-安装-Hexo" class="headerlink" title="2. 安装 Hexo"></a>2. 安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装 Hexo CLI</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化博客项目</span></span><br><span class="line">hexo init my-blog</span><br><span class="line"><span class="built_in">cd</span> my-blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="3-安装-Stellar-主题"><a href="#3-安装-Stellar-主题" class="headerlink" title="3. 安装 Stellar 主题"></a>3. 安装 Stellar 主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 Stellar 主题</span></span><br><span class="line">npm install hexo-theme-stellar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用 Git 克隆（推荐）</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/xaoxuu/hexo-theme-stellar.git themes/stellar</span><br></pre></td></tr></table></figure><h3 id="4-基础配置"><a href="#4-基础配置" class="headerlink" title="4. 基础配置"></a>4. 基础配置</h3><p>修改根目录下的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 站点信息</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">nash635</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;For all time, always.&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;记录生活，分享技术，探索未知的可能性&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">技术博客,编程,开发,生活记录</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">nash635</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL 配置</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://nash635.github.io</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主题配置</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">stellar</span></span><br></pre></td></tr></table></figure><h3 id="5-Stellar-主题配置"><a href="#5-Stellar-主题配置" class="headerlink" title="5. Stellar 主题配置"></a>5. Stellar 主题配置</h3><p>创建 <code>_config.stellar.yml</code> 文件进行主题配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网站 Logo</span></span><br><span class="line"><span class="attr">logo:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">nash635</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">For</span> <span class="string">all</span> <span class="string">time,</span> <span class="string">always.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导航菜单</span></span><br><span class="line"><span class="attr">menubar:</span></span><br><span class="line">  <span class="attr">columns:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">items:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">博客</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">solar:notebook-bold-duotone</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">项目</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">solar:code-bold-duotone</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/wiki/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">标签</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">solar:tag-bold-duotone</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/tags/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">关于</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">solar:user-bold-duotone</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">/about/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索功能</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">local_search</span></span><br><span class="line">  <span class="attr">local_search:</span></span><br><span class="line">    <span class="attr">field:</span> <span class="string">all</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/search.json</span></span><br></pre></td></tr></table></figure><h2 id="🎨-定制优化"><a href="#🎨-定制优化" class="headerlink" title="🎨 定制优化"></a>🎨 定制优化</h2><h3 id="1-个性化配置"><a href="#1-个性化配置" class="headerlink" title="1. 个性化配置"></a>1. 个性化配置</h3><p>根据个人喜好调整主题配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首页显示</span></span><br><span class="line"><span class="attr">home:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">欢迎，旅行者</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">在这里记录生活点滴，分享技术心得</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章页面</span></span><br><span class="line"><span class="attr">article:</span></span><br><span class="line">  <span class="attr">sidebar:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">items:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">widget:</span> <span class="string">toc</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">widget:</span> <span class="string">related_posts</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 页脚配置</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="string">|</span></span><br><span class="line">    <span class="string">本站由</span> <span class="string">@nash635</span> <span class="string">使用</span> [<span class="string">Stellar</span>]<span class="string">(https://github.com/xaoxuu/hexo-theme-stellar)</span> <span class="string">创建</span></span><br></pre></td></tr></table></figure><h3 id="2-添加插件"><a href="#2-添加插件" class="headerlink" title="2. 添加插件"></a>2. 添加插件</h3><p>安装常用插件增强功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索插件</span></span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># JSON 内容生成器</span></span><br><span class="line">npm install hexo-generator-json-content --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点地图</span></span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># RSS 订阅</span></span><br><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h3 id="3-创建页面"><a href="#3-创建页面" class="headerlink" title="3. 创建页面"></a>3. 创建页面</h3><p>创建必要的页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于页面</span></span><br><span class="line">hexo new page about</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标签页面</span></span><br><span class="line">hexo new page tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分类页面  </span></span><br><span class="line">hexo new page categories</span><br><span class="line"></span><br><span class="line"><span class="comment"># 归档页面</span></span><br><span class="line">hexo new page archives</span><br></pre></td></tr></table></figure><h2 id="🚀-部署优化"><a href="#🚀-部署优化" class="headerlink" title="🚀 部署优化"></a>🚀 部署优化</h2><h3 id="1-GitHub-Pages-部署"><a href="#1-GitHub-Pages-部署" class="headerlink" title="1. GitHub Pages 部署"></a>1. GitHub Pages 部署</h3><p>配置 GitHub Actions 自动部署：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .github/workflows/deploy.yml</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [ <span class="string">main</span> ]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">    </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&#x27;16&#x27;</span></span><br><span class="line">        </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">static</span> <span class="string">files</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br></pre></td></tr></table></figure><h3 id="2-性能优化"><a href="#2-性能优化" class="headerlink" title="2. 性能优化"></a>2. 性能优化</h3><p>启用压缩和缓存：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="comment"># 压缩 HTML</span></span><br><span class="line"><span class="attr">minify:</span></span><br><span class="line">  <span class="attr">html:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 启用 gzip 压缩</span></span><br><span class="line"><span class="attr">compress:</span></span><br><span class="line">  <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">css:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">js:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="📊-效果展示"><a href="#📊-效果展示" class="headerlink" title="📊 效果展示"></a>📊 效果展示</h2><p>经过配置优化后，博客具备了以下特性：</p><ul><li>✅ <strong>响应式设计</strong>: 完美适配桌面端和移动端</li><li>✅ <strong>搜索功能</strong>: 支持本地搜索，快速查找内容</li><li>✅ <strong>SEO 友好</strong>: 良好的搜索引擎优化</li><li>✅ <strong>加载迅速</strong>: 静态文件，访问速度快</li><li>✅ <strong>功能丰富</strong>: 标签分类、归档、评论等功能完善</li></ul><h2 id="🎯-后续计划"><a href="#🎯-后续计划" class="headerlink" title="🎯 后续计划"></a>🎯 后续计划</h2><p>博客搭建完成后，还有一些优化工作要做：</p><h3 id="近期计划"><a href="#近期计划" class="headerlink" title="近期计划"></a>近期计划</h3><ul><li><input disabled="" type="checkbox"> 配置评论系统（Giscus&#x2F;Waline）</li><li><input disabled="" type="checkbox"> 添加网站统计（Google Analytics）</li><li><input disabled="" type="checkbox"> 优化 SEO 配置</li><li><input disabled="" type="checkbox"> 添加 PWA 支持</li></ul><h3 id="长期计划"><a href="#长期计划" class="headerlink" title="长期计划"></a>长期计划</h3><ul><li><input disabled="" type="checkbox"> 建立友链网络</li><li><input disabled="" type="checkbox"> 开发自定义插件</li><li><input disabled="" type="checkbox"> 添加更多实用工具页面</li><li><input disabled="" type="checkbox"> 集成 API 服务</li></ul><h2 id="💡-经验总结"><a href="#💡-经验总结" class="headerlink" title="💡 经验总结"></a>💡 经验总结</h2><p>通过这次博客搭建，我总结了几点经验：</p><ol><li><strong>选择合适的工具</strong>: 根据需求选择技术栈，不要盲目追新</li><li><strong>注重用户体验</strong>: 页面加载速度和移动端适配很重要</li><li><strong>持续优化</strong>: 博客是一个长期项目，需要不断完善</li><li><strong>内容为王</strong>: 再好的工具也要有优质的内容支撑</li></ol><h2 id="🔗-参考资源"><a href="#🔗-参考资源" class="headerlink" title="🔗 参考资源"></a>🔗 参考资源</h2><ul><li><a href="https://hexo.io/docs/">Hexo 官方文档</a></li><li><a href="https://xaoxuu.com/wiki/stellar/">Stellar 主题文档</a></li><li><a href="https://docs.github.com/pages">GitHub Pages 文档</a></li><li><a href="https://markdown.com.cn/">Markdown 语法指南</a></li></ul><hr><p>博客的搭建只是开始，接下来要做的是持续创作优质内容。如果你也想搭建类似的博客，希望这篇文章能对你有所帮助！</p><p>有任何问题欢迎在评论区交流～ 🤝</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stellar </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> hexo </tag>
            
            <tag> 静态网站 </tag>
            
            <tag> github-pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World - 我的技术博客正式上线</title>
      <link href="/2025/07/24/Hello-World/"/>
      <url>/2025/07/24/Hello-World/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-World-🌍"><a href="#Hello-World-🌍" class="headerlink" title="Hello World! 🌍"></a>Hello World! 🌍</h1><p>欢迎来到我的个人博客！经过精心设计和配置，这个基于 <a href="https://hexo.io/">Hexo</a> 和 <a href="https://xaoxuu.com/wiki/stellar/">Stellar</a> 主题的技术博客终于与大家见面了。</p><blockquote><p>For all time, always.</p></blockquote><h2 id="🎯-关于这个博客"><a href="#🎯-关于这个博客" class="headerlink" title="🎯 关于这个博客"></a>🎯 关于这个博客</h2><p>这个博客的诞生源于我对知识分享的热爱和对技术探索的渴望。在这里，我将记录：</p><h3 id="📚-技术探索"><a href="#📚-技术探索" class="headerlink" title="📚 技术探索"></a>📚 技术探索</h3><ul><li><strong>分布式系统</strong>: 架构设计、一致性算法、微服务实践</li><li><strong>深度学习</strong>: 模型训练、算法优化、工程实践</li><li><strong>算法工程</strong>: 数据结构、算法设计、性能优化</li><li><strong>开发工具</strong>: 效率工具、开发环境、最佳实践</li></ul><h3 id="🌱-成长记录"><a href="#🌱-成长记录" class="headerlink" title="🌱 成长记录"></a>🌱 成长记录</h3><ul><li><strong>学习笔记</strong>: 新技术的学习心得和总结</li><li><strong>项目实战</strong>: 个人项目的开发过程和思考</li><li><strong>读书心得</strong>: 技术书籍和人文著作的感悟</li><li><strong>生活感悟</strong>: 工作生活中的思考和体会</li></ul><h2 id="�️-博客架构"><a href="#�️-博客架构" class="headerlink" title="�️ 博客架构"></a>�️ 博客架构</h2><p>这个博客采用现代化的技术栈：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">生成器:</span> <span class="string">Hexo</span> <span class="number">7.3</span><span class="number">.0</span></span><br><span class="line"><span class="string">主题:</span> <span class="string">Stellar</span> <span class="number">1.33</span><span class="number">.1</span></span><br><span class="line"><span class="string">部署:</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line"><span class="attr">CDN:</span> <span class="string">jsDelivr</span></span><br><span class="line"><span class="string">搜索:</span> <span class="string">本地搜索</span></span><br><span class="line"><span class="string">评论:</span> <span class="string">待配置</span></span><br><span class="line"><span class="string">统计:</span> <span class="string">待配置</span></span><br></pre></td></tr></table></figure><h3 id="🎨-设计理念"><a href="#🎨-设计理念" class="headerlink" title="🎨 设计理念"></a>🎨 设计理念</h3><p>参考了 <a href="https://xaoxuu.com/">xaoxuu.com</a> 的设计风格，追求：</p><ul><li><strong>简洁美观</strong>: 清爽的界面设计，专注内容阅读</li><li><strong>移动优先</strong>: 完美适配各种设备屏幕</li><li><strong>快速加载</strong>: 优化资源加载，提升用户体验</li><li><strong>易于导航</strong>: 清晰的分类结构，便于内容发现</li></ul><h2 id="🗺️-站点导航"><a href="#🗺️-站点导航" class="headerlink" title="🗺️ 站点导航"></a>🗺️ 站点导航</h2><p>博客包含以下主要板块：</p><ul><li><strong><a href="/">博客</a></strong>：最新文章和技术分享</li><li><strong><a href="/wiki/">项目</a></strong>：开源项目和个人作品展示</li><li><strong><a href="/notes/">探索</a></strong>：学习笔记和思考记录</li><li><strong><a href="/friends/">社交</a></strong>：友情链接和交流平台</li><li><strong><a href="/topic/">专栏</a></strong>：系列文章和深度内容</li><li><strong><a href="/tags/">标签</a></strong>：按标签浏览文章</li><li><strong><a href="/categories/">分类</a></strong>：按分类查看内容</li><li><strong><a href="/archives/">归档</a></strong>：时间线浏览历史文章</li><li><strong><a href="/about/">关于</a></strong>：个人介绍和联系方式</li></ul><h2 id="�-未来计划"><a href="#�-未来计划" class="headerlink" title="� 未来计划"></a>� 未来计划</h2><p>接下来，我计划在博客中发布以下内容：</p><h3 id="近期目标"><a href="#近期目标" class="headerlink" title="近期目标"></a>近期目标</h3><ul><li><input disabled="" type="checkbox"> 完善评论和统计系统</li><li><input disabled="" type="checkbox"> 添加更多实用工具页面</li><li><input disabled="" type="checkbox"> 优化 SEO 和站点性能</li><li><input disabled="" type="checkbox"> 建立友链社区</li></ul><h3 id="内容规划"><a href="#内容规划" class="headerlink" title="内容规划"></a>内容规划</h3><ul><li><input disabled="" type="checkbox"> <strong>分布式系统设计</strong> 系列文章</li><li><input disabled="" type="checkbox"> <strong>深度学习实践</strong> 项目记录</li><li><input disabled="" type="checkbox"> <strong>算法与数据结构</strong> 专题总结</li><li><input disabled="" type="checkbox"> <strong>开发工具箱</strong> 效率提升指南</li></ul><h2 id="💬-交流与反馈"><a href="#💬-交流与反馈" class="headerlink" title="💬 交流与反馈"></a>💬 交流与反馈</h2><p>这个博客不仅是我的技术记录平台，也希望成为技术交流的小天地。如果你：</p><ul><li>对文章内容有疑问或建议</li><li>想要交流技术问题</li><li>希望申请友链合作</li><li>发现了网站问题</li></ul><p>欢迎通过以下方式联系我：</p><ul><li><strong>GitHub</strong>: <a href="https://github.com/nash635">@nash635</a></li><li><strong>Email</strong>: <a href="mailto:&#110;&#97;&#x73;&#104;&#54;&#51;&#x35;&#x40;&#x65;&#120;&#x61;&#x6d;&#112;&#108;&#101;&#46;&#99;&#x6f;&#x6d;">nash635@example.com</a></li><li><strong>留言</strong>: 在文章下方评论区留言</li></ul><h2 id="🙏-致谢"><a href="#🙏-致谢" class="headerlink" title="🙏 致谢"></a>🙏 致谢</h2><p>感谢以下开源项目和作者：</p><ul><li><a href="https://hexo.io/">Hexo</a> - 快速、简洁且高效的博客框架</li><li><a href="https://github.com/xaoxuu/hexo-theme-stellar">Stellar</a> - 优雅的 Hexo 主题</li><li><a href="https://github.com/xaoxuu">@xaoxuu</a> - Stellar 主题作者</li><li><a href="https://pages.github.com/">GitHub Pages</a> - 免费的静态网站托管</li></ul><h2 id="🎉-开始探索"><a href="#🎉-开始探索" class="headerlink" title="🎉 开始探索"></a>🎉 开始探索</h2><p>博客已经准备就绪，让我们一起开启这段技术探索之旅吧！</p><p>如果你觉得这个博客对你有帮助，欢迎：</p><ul><li>⭐ 给 <a href="https://github.com/nash635/nash635.github.io">项目仓库</a> 点个 Star</li><li>🔗 推荐给更多朋友</li><li>💬 留言交流你的想法</li></ul><p>感谢你的访问，期待与你的交流！ 😊</p><hr><p><em>第一篇文章总是特别的，它标志着一个新的开始。愿这个博客能够记录下我的成长轨迹，也能为访问的朋友们带来一些价值。</em></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello </tag>
            
            <tag> world </tag>
            
            <tag> stellar </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
